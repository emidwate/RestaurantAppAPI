/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package food.api;

import food.models.CustomerOrderDTO;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-03-15T20:34:40.824180900+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
@Validated
@Tag(name = "orderItem", description = "the orderItem API")
public interface OrderItemApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /orderItem : Add food to customer order basket
     *
     * @param customerOrderDTO  (required)
     * @return Add food to customer order basket (status code 201)
     */
    @Operation(
        operationId = "addItemToOrder",
        summary = "Add food to customer order basket",
        responses = {
            @ApiResponse(responseCode = "201", description = "Add food to customer order basket")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/orderItem",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> _addItemToOrder(
        @Parameter(name = "CustomerOrderDTO", description = "", required = true) @Valid @RequestBody CustomerOrderDTO customerOrderDTO
    ) {
        return addItemToOrder(customerOrderDTO);
    }

    // Override this method
    default  ResponseEntity<Void> addItemToOrder(CustomerOrderDTO customerOrderDTO) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /orderItem/{id} : Delete item from customer order basket
     *
     * @param id  (required)
     * @return Food item deleted from customer order basket (status code 200)
     */
    @Operation(
        operationId = "deleteItemFromOrder",
        summary = "Delete item from customer order basket",
        responses = {
            @ApiResponse(responseCode = "200", description = "Food item deleted from customer order basket")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/orderItem/{id}"
    )
    
    default ResponseEntity<Void> _deleteItemFromOrder(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") Long id
    ) {
        return deleteItemFromOrder(id);
    }

    // Override this method
    default  ResponseEntity<Void> deleteItemFromOrder(Long id) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
